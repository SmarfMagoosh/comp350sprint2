{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HATFIELDAE20\\\\IdeaProjects\\\\comp350sprint2\\\\src\\\\component\\\\Table.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = _ref => {\n  let {\n    data,\n    headers\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header\n        }, header, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map(header => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row[header]\n        }, header, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","Table","data","headers","map","header","row","index"],"sources":["C:/Users/HATFIELDAE20/IdeaProjects/comp350sprint2/src/component/Table.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Table = ({ data, headers }) => {\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          {headers.map((header) => (\r\n            <th key={header}>{header}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, index) => (\r\n          <tr key={index}>\r\n            {headers.map((header) => (\r\n              <td key={header}>{row[header]}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,QAAuB;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;;EAEjC;EAAA;IAAA,wBACE;MAAA,uBACE;QAAA,UACGA,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACX;UAAA,UAAkBA;QAAlB,GAASA,MAAT;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,UACGH,IAAI,CAACE,GAAL,CAAS,CAACE,GAAD,EAAMC,KAAN,kBACR;QAAA,UACGJ,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACX;UAAA,UAAkBC,GAAG,CAACD,MAAD;QAArB,GAASA,MAAT;UAAA;UAAA;UAAA;QAAA,QADD;MADH,GAASE,KAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA;AAkBH,CApBD;;KAAMN,K;AAsBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}